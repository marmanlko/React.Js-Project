{"ast":null,"code":"var _jsxFileName = \"E:\\\\react1\\\\bindingmc\\\\src\\\\Count.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Count = () => {\n  _s();\n\n  // const state = useState();\n  // console.log(state);\n  const [count, setCount] = useState(5);\n\n  const IncNum = () => {\n    setCount(count - 1);\n  };\n\n  setInterval(IncNum, 1000);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: IncNum,\n      className: \"btn btn-danger\",\n      children: \"Click Here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Count, \"3Ah5YcJrgZh+T+j+0PvIr2v3YTw=\");\n\n_c = Count;\nexport default Count;\n\nvar _c;\n\n$RefreshReg$(_c, \"Count\");","map":{"version":3,"sources":["E:/react1/bindingmc/src/Count.jsx"],"names":["React","useEffect","useState","Count","count","setCount","IncNum","setInterval"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;AAIA,MAAMC,KAAK,GAAC,MACZ;AAAA;;AAEA;AACA;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,CAAD,CAAlC;;AACA,QAAMI,MAAM,GAAC,MAAI;AACbD,IAAAA,QAAQ,CAACD,KAAK,GAAC,CAAP,CAAR;AAEH,GAHD;;AAIAG,EAAAA,WAAW,CAACD,MAAD,EAAS,IAAT,CAAX;AAEI,sBACI;AAAA,4BACI;AAAA,gBAAKF;AAAL;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,OAAO,EAAEE,MAAjB;AAAyB,MAAA,SAAS,EAAC,gBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAOH,CAnBD;;GAAMH,K;;KAAAA,K;AAqBN,eAAeA,KAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\n\r\n\r\nconst Count=()=>\r\n{\r\n\r\n// const state = useState();\r\n// console.log(state);\r\nconst [count, setCount] = useState(5);\r\nconst IncNum=()=>{\r\n    setCount(count-1);\r\n    \r\n};\r\nsetInterval(IncNum, 1000);\r\n\r\n    return(\r\n        <>  \r\n            <h2>{count}</h2>\r\n            <button onClick={IncNum} className=\"btn btn-danger\">Click Here</button>\r\n        </>\r\n\r\n    );\r\n};\r\n\r\nexport default Count;"]},"metadata":{},"sourceType":"module"}